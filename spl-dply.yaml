apiVersion: v1
kind: Pod
metadata:
  labels:
    name: app
  name: app
  namespace: elastic-stack
spec:
  containers:
  - image: kodekloud/event-simulator
    imagePullPolicy: Always
    name: app
    volumeMounts:
    - mountPath: /log
      name: log-volume
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-w8bkx
      readOnly: true
  - image: kodekloud/filebeat-configured
    name: sidecar
    volumeMounts:
    - mountPath: /var/log/event-simulator/
      name: log-volume
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-w8bkx
      readOnly: true
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - hostPath:
      path: /var/log/webapp
      type: DirectoryOrCreate
    name: log-volume
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: kibana
  name: kibana
  namespace: elastic-stack
spec:
  containers:
  - env:
    - name: ELASTICSEARCH_URL
      value: http://elasticsearch:9200
    image: kibana:6.4.2
    name: kibana
    ports:
    - containerPort: 5601
      protocol: TCP
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-p5ckx
      readOnly: true
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2023-10-23T21:07:01Z"
  labels:
    name: elastic-search
  name: elastic-search
  namespace: elastic-stack
  resourceVersion: "2243"
  uid: 5ebe83e7-d90c-4e79-b144-7f1f3f278e80
spec:
  containers:
  - env:
    - name: discovery.type
      value: single-node
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.2
    imagePullPolicy: IfNotPresent
    name: elastic-search
    ports:
    - containerPort: 9200
      protocol: TCP
    - containerPort: 9300
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-z7p5z
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: controlplane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-z7p5z
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2023-10-23T20:49:34Z"
  name: elasticsearch
  namespace: elastic-stack
  resourceVersion: "734"
  uid: 2e04ad42-b481-422b-bcc1-0e7a2a9622b7
spec:
  clusterIP: 10.101.229.77
  clusterIPs:
  - 10.101.229.77
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: port1
    nodePort: 30200
    port: 9200
    protocol: TCP
    targetPort: 9200
  - name: port2
    nodePort: 30300
    port: 9300
    protocol: TCP
    targetPort: 9300
  selector:
    name: elastic-search
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2023-10-23T20:49:34Z"
  name: kibana
  namespace: elastic-stack
  resourceVersion: "754"
  uid: f998c72c-c51f-43fd-83cf-722d322a42e5
spec:
  clusterIP: 10.100.18.84
  clusterIPs:
  - 10.100.18.84
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - nodePort: 30601
    port: 5601
    protocol: TCP
    targetPort: 5601
  selector:
    name: kibana
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}